  pipeline {
    agent any
    environment {
        PROJECT_ID = 'synergize-test'
        CLUSTER_NAME = "${GKE_NAME}-gke"
        LOCATION = 'asia-southeast2-a'
        CREDENTIALS_ID = 'synergize-test'
        BUILD_ID_IMAGE = "${BUILD_ID}"
    }
    stages {

      stage('Terraform Init & Plan') {
        steps {
          sh """
                echo "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic3luZXJnaXpl
LXRlc3QiLAogICJwcml2YXRlX2tleV9pZCI6ICIzOWIxOWZiYzdmMTQ2OGEyODA1NDRjNjQ3MzU2
ZTU1NDU5ZTRiYWU2IiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0t
LS0tXG5NSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUM2
Tk9XZmZadzBIYUZBXG5FVlpIdnI5dG5OSVZaY1IyQkxDT3NnckRnYU9SbnR2RVpOdHFnYmN2a2Rt
aHNkUjM3SUhadTZBSW0xTWpja2s4XG5aNnQ3UHVGdHpEYUNHSkRheWtadjVCZTd1cjhOZmZ2REVB
SUsxOTJacjFDM1VDTHEvSlgxNzVwOFd1eGxLOFF2XG40a2VqTUZBa1Z6ODVsa1lJWmdxMkpxYTNJ
c1dkdE1sK1FZVXJhSUsxNEttSEhMWVRzakNUb0hvcTB0em4xM0VmXG5BU3dTdkpTR3pCS1RqcStS
NHU4YUFWNXlPUU83RGVxQWhrL2lVK21PK2JadmtScThiOXNQRW5ycm5hc0k2ZGZRXG5Qek1ya2xJ
Y2RFRThNcjRUN1VSUExvRTV2bFNTdEJ2bFhUamxGR3Y4OU4weFp6bjBLSjZpbHdZS0N5T01TWVJJ
XG54R3c2eFFLakFnTUJBQUVDZ2dFQVE3MVJtYXRuQTNpUi9FNHlUcWhnV0g1MzJNdnNaQ2pCbUMv
Q0JheW9OaVlOXG4rZ3pjMjRxeit3eTZtUDJwOXpTbGFuRzh2dFRPc25MMW5KRjBTMEl0WFRXdzBM
UWlJazM2d09MQUZZM1N5aFErXG5YaEI1UmJ1UkJNTklBR0FaUzlZMnNjRUlPTndVNnBzNDVGaVR5
aFNkMnhLWVVCbFFnZWFwVittSXRjL2pCME1xXG5ORE5GaFpneU11VTV1K1AyMkFCNGlGd1VvWHFs
NHVYcEJzOFdtbXJheE5CQkkzQkhLOUFFcHFwTi93TGpkWDRKXG5OaXZUM2lMV3dXbDU4bnhHNDBC
RENDWUxQSk5IcXpFYndMOVI5UGo2MGg1YkR6Z201eDhiLy9RMExtVGdCM25PXG43UzR0RkNIVGl0
UVRnc2hmU21kSFNFYk5vSGZnZFpTRHhRTi9QNkxqQVFLQmdRRGU5ckdEZG5ndEZYNWdOWC9DXG4v
bjBsOVl6SGRjZUd4ZWFGYXdPemtTSWlxTUJybytHaW9sM29VMEFCT3JpL2tROTVoRU1ocWVHSjNu
RTJVYSsxXG5UaDdDejRLWFJhaCtGdytLT2FLUGlEWldVSXVvQk9nTExDeFFnRyttQTVtU2pVeWpp
WjhXOEpmZi94L1FyaDlCXG5qbUdjSHZCbHVrUUV6YWdrelhTb3JvRVJBUUtCZ1FEVnkvWVBRbEZ6
NW01c2dTMnR5Y25XVE9wdHBIZkVGeHZyXG5qNmNsbTFIOFVOOTVEQS9KYVZCZ0NUSFB5MHRZcjFF
dTFaWFNhTUlmZWVYZGZ4bjVVRjQ1UnkzNEdNSWtnVnVHXG5heVBXMlEyaU9QcWhYdENHZmVHTTVJ
REg2TjYzclZOWDlwVTIzUGVFWUg1Q1BXUTRWNTZBRkRSaWdOSlkxZDNrXG5Qd1hIZEhndm93S0Jn
RzROL084MElmdTIrVXRKL1FkbUVLWVUvMmxSQkt6TXNJMjRsZm9qc0dMRlF6MmVoZmgrXG5Cclp2
cVU4eUNoRmM2L09DU3BTcVF3Nkhnd0JaNzg0aGdtT01oQnhoSU5za1RPSmdzcElBblRtYnhtT29F
Rlc3XG5keUJCVlZydnVmVXgwOXVCU2NyTDlWdDJsZUN1b2ZUODc4ZGRLakk4YitpakR0VWpxT3Er
UUMwQkFvR0JBTFNaXG5xOHl1QitKdytEeWVUcmpzcVp4bXN1MVZybm90eno4SXhYaG1JVGFVRm9M
SlpwaU1ad0lKSWxQVzlsbi9Gd1FLXG5GcHA4TmVlaThFTlFOOSs4UFN3RGJkaVRDWVVPNVFMQ2hL
N2NBY0ZVZ3B0SVhid09vRGFGWENnREZnaHcyT09JXG5mL210WlVVa3dlTXd1dlZCUnJvSTEwdVNh
SjMwWTVHSWoxZ3lrY2dqQW9HQkFOV0poUHd6ZFE3eGR4RHVoV2FMXG5idmxBWlNCOGtjUGtXd2Qr
UDFDZFBza1V6dnNwcitQODdNb1BrREVXUVhwUEJUZnRmWXM0TWs3dDdIRlovTE9MXG55U1hlYVRC
RFhRZXJ6WklkT2FJY1lIbTlHZjhjSmU1YjY4ZDdMa0c4NktBMTFKNERUV0sxclpmR0RNamdQUm1P
XG5rQ2ZVTGQ2Y0lBV0wyRGJjSW1nRDJJZENcbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIs
CiAgImNsaWVudF9lbWFpbCI6ICIxNjMzNDkzNDY2OC1jb21wdXRlQGRldmVsb3Blci5nc2Vydmlj
ZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjU4NTA1NTIxNDM4OTkzNTc3NiIsCiAg
ImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwK
ICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAi
YXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29t
L29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3
Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvMTYzMzQ5MzQ2NjgtY29tcHV0
ZSU0MGRldmVsb3Blci5nc2VydmljZWFjY291bnQuY29tIiwKICAidW5pdmVyc2VfZG9tYWluIjog
Imdvb2dsZWFwaXMuY29tIgp9Cg==" | base64 -d > credentials.json
            """
          sh """
                export GOOGLE_APPLICATION_CREDENTIALS="./credentials.json"
                sed -i 's/GKE_NAME/${GKE_NAME}/g' ./kubernetes-terraform/terraform.tfvars
            """
          sh 'cd kubernetes-terraform && terraform init'
          sh 'cd kubernetes-terraform && terraform plan'
        }      
      }

      stage('TF Apply') {
        steps {
          sh 'cd kubernetes-terraform && terraform apply --auto-approve'
        }
      }
      stage('Deploy to GKE') {
        steps{
            step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: './kubernetes-manifest/nginx/nginx.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: false])
            step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: './kubernetes-manifest/postgresql/postgresql.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: false])
            step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: './kubernetes-manifest/postgresql/pv_pvc.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: false])
            step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: './kubernetes-manifest/redis/redis.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: false])
        }
      }
      stage('Approval') {
        steps {
          script {
            def userInput = input(id: 'confirm', message: 'Destroy Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Destroy terraform', name: 'confirm'] ])
          }
        }
      }
      stage('TF Destroy') {
        steps {
          sh 'cd kubernetes-terraform && terraform destroy --auto-approve'
        }
      }
    } 
  }